This is an example Python project for building a generative transformer chatbot with GUI in Django:

Install necessary libraries
python
Copy code
!pip install transformers django
Create a new Django project and app
python
Copy code
django-admin startproject chatbot
cd chatbot
python manage.py startapp chat
Open the chat/views.py file and define the view function for the chatbot page. In this example, we will use a simple form to receive user input and display chatbot responses.
python
Copy code
from django.shortcuts import render
from transformers import pipeline, set_seed

set_seed(42)

generator = pipeline('text-generation', model='gpt2')

def home(request):
    if request.method == 'POST':
        user_input = request.POST.get('user_input')
        chatbot_response = generate_response(user_input)
        context = {'user_input': user_input, 'chatbot_response': chatbot_response}
        return render(request, 'chat/home.html', context)
    else:
        return render(request, 'chat/home.html')

def generate_response(prompt, max_length=100):
    response = generator(prompt, max_length=max_length, do_sample=True, temperature=0.7)[0]['generated_text']
    return response.strip()
Create the HTML template chat/templates/chat/home.html for the chatbot page. In this example, we will use a simple form to receive user input and display chatbot responses.
html
Copy code
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Chatbot</title>
</head>
<body>
    <h1>Chatbot</h1>
    <form method="POST">
        {% csrf_token %}
        <label for="user_input">You:</label>
        <input type="text" name="user_input" id="user_input">
        <input type="submit" value="Send">
    </form>
    {% if user_input %}
    <p>You: {{ user_input }}</p>
    <p>Chatbot: {{ chatbot_response }}</p>
    {% endif %}
</body>
</html>
Open the chat/urls.py file and define the URL pattern for the chatbot page.
python
Copy code
from django.urls import path
from . import views

urlpatterns = [
    path('', views.home, name='home'),
]
Open the chatbot/urls.py file and include the chat app URLs.
python
Copy code
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('chat.urls')),
]
Run the Django server and access the chatbot page at http://localhost:8000/
python
Copy code
python manage.py runserver
To run the code, simply copy and paste the code into the respective files, start the Django server using python manage.py runserver, and access the chatbot page at http://localhost:8000/. The chatbot will generate responses using the pre-trained GPT-2 model in response to user input submitted through the HTML form
